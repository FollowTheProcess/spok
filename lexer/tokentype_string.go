// Code generated by "stringer -type=tokenType -linecomment"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[tokenError-0]
	_ = x[tokenEOF-1]
	_ = x[tokenIDENT-2]
	_ = x[tokenInt-3]
	_ = x[tokenString-4]
	_ = x[tokenQuote-5]
	_ = x[tokenColon-6]
	_ = x[tokenEquals-7]
	_ = x[tokenTask-8]
	_ = x[tokenOpenParen-9]
	_ = x[tokenCloseParen-10]
	_ = x[tokenOpenBrace-11]
	_ = x[tokenCloseBrace-12]
	_ = x[tokenOpenBracket-13]
	_ = x[tokenCloseBracket-14]
	_ = x[tokenArrowStem-15]
	_ = x[tokenArrowHead-16]
}

const _tokenType_name = "ErrorEOFIDENTIntegerString\":=task(){}[]->"

var _tokenType_index = [...]uint8{0, 5, 8, 13, 20, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41}

func (i tokenType) String() string {
	if i < 0 || i >= tokenType(len(_tokenType_index)-1) {
		return "tokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenType_name[_tokenType_index[i]:_tokenType_index[i+1]]
}
